/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface SendMessage$Params {
  username: string;
  phoneNumber: string;
  email: string;
  serviceName: string;
  message: string;
}

export function sendMessage(http: HttpClient, rootUrl: string, params: SendMessage$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
  const rb = new RequestBuilder(rootUrl, sendMessage.PATH, 'post');
  if (params) {
    rb.query('username', params.username, {});
    rb.query('phoneNumber', params.phoneNumber, {});
    rb.query('email', params.email, {});
    rb.query('serviceName', params.serviceName, {});
    rb.query('message', params.message, {});
  }

  return http.request(
    rb.build({ responseType: 'text', accept: '*/*', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;
    })
  );
}

sendMessage.PATH = '/user/send';
